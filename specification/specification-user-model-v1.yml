openapi: 3.0.1
info:
  title: "Analytic"
  description: This is a place where calculate analytical information
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.0
servers:
  - url: http://localhost:8080/v1
tags:
  - name: us
    description: User
paths:
  /us/create:
    post:
      tags:
        - us
      summary: Create user
      operationId: createUser
      requestBody:
        description: Request body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UsCreateRequest'
        required: true
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsCreateResponse'
  /us/search:
    post:
      tags:
        - us
      summary: Search user
      operationId: searchUser
      requestBody:
        description: Request body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UsSearchRequest'
        required: true
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsSearchResponse'
  /us/update:
    post:
      tags:
        - us
      summary: Update user
      operationId: updateUser
      requestBody:
        description: Request body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UsUpdateRequest'
        required: true
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsUpdateResponse'
  /us/delete:
    post:
      tags:
        - us
      summary: Delete user
      operationId: deleteUser
      requestBody:
        description: Request body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UsDeleteRequest'
        required: true
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsDeleteResponse'
components:
  schemas:

    IRequest:
      type: object
      description: Базовый интерфейс для всех запросов
      properties:
        requestType:
          type: string
          description: Поле-дескриминатор для вычисления типа запроса
          example: create
        requestId:
          type: string
          description: Идентификатор запроса для отладки
      discriminator:
        propertyName: requestType
        mapping:
          create: '#/components/schemas/UsCreateRequest'
          read: '#/components/schemas/UsSearchRequest'
          update: '#/components/schemas/UsUpdateRequest'
          delete: '#/components/schemas/UsDeleteRequest'

    IResponse:
      type: object
      description: Базовый интерфейс для всех ответов
      properties:
        responseType:
          type: string
          description: Поле-дескриминатор для вычисления типа запроса
          example: create
        requestId:
          type: string
          description: Идентификатор запроса для отладки
        result:
          $ref: '#/components/schemas/ResponseResult'
        errors:
          type: array
          items:
            $ref: '#/components/schemas/Error'

    ResponseResult:
      type: string
      enum:
        - success
        - error

    Error:
      type: object
      properties:
        code:
          type: string
        group:
          type: string
        field:
          type: string
        message:
          type: string

    UsCreateRequest:
      allOf:
        - $ref: '#/components/schemas/IRequest'
        - type: object
          properties:
            name:
              type: string
            email:
              type: string
            age:
              type: integer

    UsCreateResponse:
      allOf:
        - $ref: '#/components/schemas/IRequest'
        - type: object
          properties:
            id:
              type: object
            message:
              type: string

    UsSearchRequest:
      allOf:
        - $ref: '#/components/schemas/IRequest'
        - type: object
          properties:
            query:
              type: string

    UsSearchResponse:
      type: object
      properties:
        users:
          type: array
          items:
            $ref: '#/components/schemas/User'
    UsUpdateRequest:
      type: object
      properties:
        id:
          type: object
        name:
          type: string
        email:
          type: string
        age:
          type: integer
      allOf:
        - $ref: '#/components/schemas/IRequest'
    UsUpdateResponse:
      type: object
      properties:
        message:
          type: string
    UsDeleteRequest:
      type: object
      properties:
        id:
          type: object
    UsDeleteResponse:
      allOf:
        - $ref: '#/components/schemas/IRequest'
        - type: object
          properties:
            message:
              type: string
      type: object
    User:
      type: object
      properties:
        id:
          type: object
        name:
          type: string
        email:
          type: string
        age:
          type: integer